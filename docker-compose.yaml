# version: '3'
services:
  otel-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    # environment:
    #   OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:5000/v1/logs
    #   OTEL_EXPORTER_METRICS_OTEL_REST_ENDPOINT: http://localhost:5000/v1/metrics
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    configs:
      - source: otel-collector-config
        target: /etc/otel-collector-config.yaml
    depends_on:
      - loki
    # networks:
    #   - rust-otel-demo
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    environment:
      - GF_INSTALL_PLUGINS=opentelemetry-collector-exporter
    # volumes: 
    #   - loki-data:/loki
    # networks:
    #   - rust-otel-demo
    configs:
      - source: loki-config
        target: /config/config.yaml
  grafana:
    image: grafana/grafana:latest
    ports:
      - "9090:3000"
    environment:
      - GF_LOKI_URL=http://loki:3100/loki/api/v1/push
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    # volumes:
    #   - grafana-data:/var/lib/grafana
#     networks:
#       - rust-otel-demo
# networks:
#   rust-otel-demo:
#     driver: bridge
# volumes:
  # grafana-data:
  # loki-data:
  # otel-collector-data:  

configs:
  loki-config:
    content: | 
      limits_config:
        allow_structured_metadata: true
  otel-collector-config:
    content: | 
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
      exporters:
        debug:
          verbosity: detailed
        otlphttp:
          endpoint: http://loki:3100/otlp
      service:
        pipelines:
          traces:
            receivers: [otlp]
            exporters: [debug]
          metrics:
            receivers: [otlp]
            exporters: [debug]
          logs:
            receivers: [otlp]
            exporters: [debug, otlphttp]
