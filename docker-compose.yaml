# version: '3'
services:
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
  otel-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318"  #OTLP http receiver
      - "55679:55679"
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    # environment:
    #   OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:5000/v1/logs
    #   OTEL_EXPORTER_METRICS_OTEL_REST_ENDPOINT: http://localhost:5000/v1/metrics
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    configs:
      - source: otel-collector-config
        target: /etc/otel-collector-config.yaml
    depends_on:
      - loki
      - jaeger-all-in-one
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    environment:
      - GF_INSTALL_PLUGINS=opentelemetry-collector-exporter
    # volumes: 
    #   - loki-data:/loki
    configs:
      - source: loki-config
        target: /config/config.yaml
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3030:3000"
    environment:
      # - GF_LOKI_URL=http://loki:3100 # This is in the docs, but this does not work
      # - GF_SECURITY_ADMIN_USER=admin
      # - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch correlations traceQLStreaming metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app,grafana-pyroscope-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    configs:
    - source: grafana-datasources
      target: /usr/share/grafana/conf/provisioning/datasources/datasources.yaml
    depends_on:
      - loki
    restart: unless-stopped
    # volumes:
    #   - grafana-data:/var/lib/grafana
  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml

volumes:
  grafana-data:
  loki-data:
  otel-collector-data:  

configs:
  prometheus-config:
    content: |
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['otel-collector:8889']
            - targets: ['otel-collector:8888']
  grafana-datasources:
    content: |
      apiVersion: 1
      datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          maxLines: 1000
          minTimeRange: 1m
  loki-config:
    content: | 
      limits_config:
        allow_structured_metadata: true
  otel-collector-config:
    content: | 
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
        # Collect own metrics
        prometheus:
          config:
            scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
              - targets: ['0.0.0.0:8888']
      exporters:
        debug:
          verbosity: detailed
        otlphttp/logs:
          endpoint: http://loki:3100/otlp
          #tls:
          #  insecure: true
        otlp:
          endpoint: jaeger-all-in-one:4317
          tls:
            insecure: true
        prometheus:
          endpoint: "0.0.0.0:8889"
          const_labels:
            label1: value1
      service:
        pipelines:
          traces:
            receivers: [otlp]
            exporters: [debug]
          metrics:
            receivers: [otlp, prometheus]
            exporters: [debug]
          logs:
            receivers: [otlp]
            exporters: [debug, otlphttp/logs]

